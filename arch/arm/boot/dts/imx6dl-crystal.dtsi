/*
 * Device Tree file for Vitro Crystal 2 board
 * Copyright (C) 2017 Maciej Pijanowski <maciej.pijanowski@3mdeb.com>
 * Based on work by Russell King and Rabeeh Khoury for Hummingboard
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License.
 *
 *     This file is distributed in the hope that it will be useful
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED , WITHOUT WARRANTY OF ANY KIND
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	chosen {
		stdout-path = &uart1;
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_crystal_gpio_led>;

		led0: user1 {
			label = "user";
			gpios = <&gpio2 16 GPIO_ACTIVE_HIGH>;
			default-state = "on";
			linux,default-trigger = "heartbeat";
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_mpcie1_3v3: regulator-mpcie1-3v3 {
			compatible = "regulator-fixed";
			enable-active-high;
			gpio = <&gpio3 26 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_crystal_reg_mpcie1>;
			regulator-max-microvolt = <3300000>;
			regulator-min-microvolt = <3300000>;
			regulator-name = "reg_mpcie1_3v3";
			regulator-always-on;
			vin-supply = <&reg_gen_3v3>;
		};

		reg_mpcie2_3v3: regulator-mpcie2-3v3 {
			compatible = "regulator-fixed";
			enable-active-high;
			gpio = <&gpio3 27 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_crystal_reg_mpcie2>;
			regulator-max-microvolt = <3300000>;
			regulator-min-microvolt = <3300000>;
			regulator-name = "reg_mpcie2_3v3";
			regulator-always-on;
			vin-supply = <&reg_gen_3v3>;
		};

		reg_usbotg_vbus: regulator-usbotg-vbus {
			compatible = "regulator-fixed";
			enable-active-high;
			gpio = <&gpio3 22 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_crystal_reg_usbotg>;
			regulator-max-microvolt = <5000000>;
			regulator-min-microvolt = <5000000>;
			regulator-name = "reg_usbotg_vbus";
			vin-supply = <&reg_pmic_5v>;
		};

		reg_sd: regulator-sd {
			compatible = "regulator-fixed";
			/* SD2_PWR_EN << PWM2_OUT << DISP0_DAT9(GPIO4_IO30) */
			gpio = <&gpio4 30 GPIO_ACTIVE_HIGH>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_crystal_reg_sd>;
			regulator-boot-on;
			regulator-max-microvolt = <3300000>;
			regulator-min-microvolt = <3300000>;
			regulator-name = "reg_sd";
			startup-delay-us = <1000>;
			vin-supply = <&reg_gen_3v3>;
		};
	};
};

&audmux {
	status = "okay";
};

&can1 {
      pinctrl-names = "default";
      pinctrl-0 = <&pinctrl_crystal_flexcan1>;
      status = "okay";
};

&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_enet_ar8035>;
	phy-mode = "rgmii-id";
	phy-reset-duration = <10>;
	phy-reset-gpios = <&gpio4 15 GPIO_ACTIVE_LOW>;
	status = "okay";
};

&hdmi {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_hdmi>;
	ddc-i2c-bus = <&i2c2>;
	status = "okay";
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_i2c1>;
	status = "okay";
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_i2c2>;
	status = "okay";
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_i2c3>;
	status = "okay";

	pmic: pf0100@08 {
		compatible = "fsl,pfuze100";
		/* 0x08 is the default addr of MMPF0100 IC. It can be
		 * programmed  from 0x08 to 0x0F via OTP (On Time
		 * programmability) functionality */
		reg = <0x08>;
		/* INT pin of MMPF0100 IC is routed as PMIC_INT_B signal and
		 * connected to GPIO_18 (GPIO7_IO13 muxed to ALT5) */
		interrupt-parent = <&gpio7>;
		/* first cell is pin number, second cell is interrupt mode */
		interrupts = <13 IRQ_TYPE_LEVEL_LOW>;

		regulators {
			/* VDDCORE voltage rail */
			reg_vddcore: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-always-on;
				regulator-boot-on;
			};

			/* VDDSOC voltage rail */
			reg_vddsoc: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-always-on;
				regulator-boot-on;
			};

			/* GEN_3V3 voltage rail */
			reg_gen_3v3: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				regulator-boot-on;
			};

			/* DDR_1V5 voltage rail */
			reg_ddr_1v5a: sw3a {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
				regulator-boot-on;
			};

			/* DDR_1V5 voltage rail */
			reg_ddr_1v5b: sw3b {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
				regulator-boot-on;
			};

			/* AUX_3V15 voltage rail */
			/* alternate supply for MX6 power domain (VDDHIGH) */
			reg_aux_3v15: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			/* PMIC_5V voltage rail */
			/* 5V supply for HDMI and USB OTG */
			reg_pmic_5v: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			/* VSNVS_3V0 voltage rail */
			reg_vsnvs_3v0: vsnvs {
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
				regulator-boot-on;
			};

			/* DDR_VREF voltage rail */
			reg_ddr_vref: vrefddr {
				regulator-boot-on;
				regulator-always-on;
			};

			/* VGEN1_1V5 voltage rail */
			/* 1.5V supply for mPCIe */
			reg_vgen1_1v5: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
				regulator-always-on;
			};

			/* VGEN1_1V5 voltage rail */
			/* 1.5V supply for mPCIe */
			reg_vgen2_1v5: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
				regulator-always-on;
			};

			/* VGEN3_2V5 voltage rail */
			/* not used */
			reg_vgen3_2v5: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};

			/* VGEN1_1V8 voltage rail */
			/* used by UART level shifter SN74 IC, also by NVCC
			 * power group */
			reg_vgen4_1v8: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			/* VGEN5_2V8 voltage rail */
			/* used by MX6 power domain (VDDHIGH) */
			reg_vgen5_2v8: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			/* VGEN5_3V3 voltage rail */
			/* shorted to ETH_3V3 rail */
			reg_vgen6_3v3: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	crystal {
		pinctrl_crystal_gpio_led: crystal-gpio-led {
			fsl,pins = <
				/* USR_DEF_RED_LED */
				MX6QDL_PAD_EIM_A22__GPIO2_IO16 0x130b1
			>;
		};

		pinctrl_crystal_enet_ar8035: crystal-enet-ar8035 {
			fsl,pins = <
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO		0x1b8b0
				MX6QDL_PAD_ENET_MDC__ENET_MDC		0x1b0b0
				/* AR8035 reset */
				MX6QDL_PAD_KEY_ROW4__GPIO4_IO15		0x130b0
				/* AR8035 interrupt */
				MX6QDL_PAD_DI0_PIN2__GPIO4_IO18		0x80000000
				/* GPIO16 -> AR8035 25MHz */
				MX6QDL_PAD_GPIO_16__ENET_REF_CLK	0xc0000000
				MX6QDL_PAD_RGMII_TXC__RGMII_TXC		0x80000000
				MX6QDL_PAD_RGMII_TD0__RGMII_TD0		0x1b030
				MX6QDL_PAD_RGMII_TD1__RGMII_TD1		0x1b030
				MX6QDL_PAD_RGMII_TD2__RGMII_TD2		0x1b030
				MX6QDL_PAD_RGMII_TD3__RGMII_TD3		0x1b030
				MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL	0x1b030
				/* AR8035 CLK_25M --> ENET_REF_CLK (V22) */
				MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK	0x0a0b1
				/* AR8035 pin strapping: IO voltage: pull up */
				MX6QDL_PAD_RGMII_RXC__RGMII_RXC		0x1b030
				/* AR8035 pin strapping: PHYADDR#0: pull down */
				MX6QDL_PAD_RGMII_RD0__RGMII_RD0		0x13030
				/* AR8035 pin strapping: PHYADDR#1: pull down */
				MX6QDL_PAD_RGMII_RD1__RGMII_RD1		0x13030
				/* AR8035 pin strapping: MODE#1: pull up */
				MX6QDL_PAD_RGMII_RD2__RGMII_RD2		0x1b030
				/* AR8035 pin strapping: MODE#3: pull up */
				MX6QDL_PAD_RGMII_RD3__RGMII_RD3		0x1b030
				/* AR8035 pin strapping: MODE#0: pull down */
				MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL	0x13030
				/*
				 * As the RMII pins are also connected to RGMII
				 * so that an AR8030 can be placed, set these
				 * to high-z with the same pulls as above.
				 * Use the GPIO settings to avoid changing the
				 * input select registers.
				 */
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25	0x03000
				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27	0x03000
				MX6QDL_PAD_ENET_RXD1__GPIO1_IO26	0x03000
			>;
		};

		pinctrl_crystal_flexcan1: crystal-flexcan1 {
			fsl,pins = <
				MX6QDL_PAD_GPIO_8__FLEXCAN1_RX 0x80000000
				MX6QDL_PAD_GPIO_7__FLEXCAN1_TX 0x80000000
			>;
		};

		pinctrl_crystal_hdmi: crystal-hdmi {
			fsl,pins = <
				MX6QDL_PAD_KEY_ROW2__HDMI_TX_CEC_LINE 0x1f8b0
			>;
		};

		pinctrl_crystal_i2c1: crystal-i2c1 {
			fsl,pins = <
				MX6QDL_PAD_EIM_D21__I2C1_SCL 0x4001b8b1
				MX6QDL_PAD_EIM_D28__I2C1_SDA 0x4001b8b1
			>;
		};

		pinctrl_crystal_i2c2: crystal-i2c2 {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL 0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA 0x4001b8b1
			>;
		};

		pinctrl_crystal_i2c3: crystal-i2c3 {
			fsl,pins = <
				MX6QDL_PAD_EIM_D17__I2C3_SCL 0x4001b8b1
				MX6QDL_PAD_EIM_D18__I2C3_SDA 0x4001b8b1
			>;
		};

		pinctrl_crystal_pcie_reset: crsytal-pcie-reset {
			fsl,pins = <
				MX6QDL_PAD_SD4_DAT3__GPIO2_IO11 0x1b0b1
			>;
		};

		pinctrl_crystal_reg_mpcie1: crystal-reg-mpcie1 {
			fsl,pins = <
				/* 0x1b0b0:
				 * hysteresis enabled, 100K pull up, medium
				 * speed (100MHz), 43_OHM Drive Strength,
				 * Slow Slew Rate */
			       MX6QDL_PAD_EIM_D26__GPIO3_IO26  0x1b0b0
			>;
		};

		pinctrl_crystal_reg_mpcie2: crystal-reg-mpcie2 {
			fsl,pins = <
				MX6QDL_PAD_EIM_D27__GPIO3_IO27  0x1b0b0
			>;
		};

		pinctrl_crystal_reg_sd: crystal-reg-sd {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT9__GPIO4_IO30 0x1b0b0
			>;
		};

		pinctrl_crystal_reg_usbotg: crystal-reg-usbotg {
			fsl,pins = <MX6QDL_PAD_EIM_D22__GPIO3_IO22 0x1b0b0>;
		};

		pinctrl_crystal_uart1: crystal-uart1 {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA	0x1b0b1
				MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA	0x1b0b1
			>;
		};

		pinctrl_crystal_usbotg_id: crystal-usbotg-id {
			 /* pulled down for a fixed host connection */
			fsl,pins = <MX6QDL_PAD_GPIO_1__USB_OTG_ID 0x13059>;
		};

		pinctrl_crystal_usdhc2_cd: crystal-usdhc2-cd {
			fsl,pins = <
				/* card detect */
				MX6QDL_PAD_GPIO_4__GPIO1_IO04	 0x1f071
				/* SD2_VSELECT is not connected (TP32)*/
			>;
		};

		pinctrl_crystal_usdhc2: crystal-usdhc2 {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD    0x17059
				MX6QDL_PAD_SD2_CLK__SD2_CLK    0x10059
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0 0x17059
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1 0x17059
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2 0x17059
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3 0x13059
			>;
		};

		pinctrl_crystal_usdhc2_100mhz: crystal-usdhc2-100mhz {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD    0x170b9
				MX6QDL_PAD_SD2_CLK__SD2_CLK    0x100b9
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0 0x170b9
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1 0x170b9
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2 0x170b9
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3 0x130b9
			>;
		};

		pinctrl_crystal_usdhc2_200mhz: crystal-usdhc2-200mhz {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD    0x170f9
				MX6QDL_PAD_SD2_CLK__SD2_CLK    0x100f9
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0 0x170f9
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1 0x170f9
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2 0x170f9
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3 0x130f9
			>;
		};
	};
};

&pcie {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_pcie_reset>;
	reset-gpio = <&gpio2 11 GPIO_ACTIVE_LOW>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_uart1>;
	status = "okay";
};

&usbh1 {
	disable-over-current;
	vbus-supply = <&reg_pmic_5v>;
	status = "okay";
};

&usbotg {
	disable-over-current;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_crystal_usbotg_id>;
	vbus-supply = <&reg_usbotg_vbus>;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <
		&pinctrl_crystal_usdhc2_cd
		&pinctrl_crystal_usdhc2
	>;
	pinctrl-1 = <
		&pinctrl_crystal_usdhc2_cd
		&pinctrl_crystal_usdhc2_100mhz
	>;
	pinctrl-2 = <
		&pinctrl_crystal_usdhc2_cd
		&pinctrl_crystal_usdhc2_200mhz
	>;
	vmmc-supply = <&reg_sd>;
	cd-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>;
	status = "okay";
};
